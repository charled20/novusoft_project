{% from "components/variables.njk" import defaults %}

{% extends "components/template.njk" %}

{% set page_title = "Login" %}
{% set enable_guest = true %}
{% set enable_container_fluid = true %}
{% set enable_header = false %}
{% set content_class = "content-transparent" %}

{% block content %}
  <div class="row g-0 align-items-center justify-content-center h-100">
    <div class="col-sm-8 col-md-6 col-lg-4 col-xl-3">

      <!-- BEGIN Portlet -->
      <div class="portlet">
        <div class="portlet-body">
          <div class="text-center mt-4 mb-5">

            <!-- BEGIN Avatar -->
            <div class="avatar avatar-label-primary avatar-circle widget12">
              <div class="avatar-display">
                <i class="fa fa-user-alt"></i>
              </div>
            </div>
            <!-- END Avatar -->

          </div>

          <!-- BEGIN Form -->
          <form class="d-grid gap-3" id="login-form">

            <!-- BEGIN Validation Container -->
            <div class="validation-container">
            
              <!-- BEGIN Form Floating -->
              <div class="form-floating">
                <input class="form-control form-control-lg" type="email" id="email" name="email" placeholder="Please insert your email" value="admin@blueupcode.com">
                <label for="email">Email</label>
              </div>
              <!-- END Form Floating -->
            
            </div>
            <!-- END Validation Container -->

            <!-- BEGIN Validation Container -->
            <div class="validation-container">
            
              <!-- BEGIN Form Floating -->
              <div class="form-floating">
                <input class="form-control form-control-lg" type="password" id="password" name="password" placeholder="Please insert your password" value="blueupcodeadmin">
                <label for="password">Password</label>
              </div>
              <!-- END Form Floating -->
            
            </div>
            <!-- END Validation Container -->

            <!-- BEGIN Flex -->
            <div class="d-flex align-items-center justify-content-between">
              <span>Don't have an account? <a href="{{ 'register.html' | url }}">Register</a></span>
              <button type="submit" class="btn btn-label-primary btn-lg btn-widest" id="login-button">Login</button>
            </div>
            <!-- END Flex -->

          </form>
          <!-- END Form -->

        </div>
      </div>
      <!-- END Portlet -->

    </div>
  </div>
  <script type="module">
    import { signInWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/9.6.8/firebase-auth.js";

    // Form submit handler
    const submitHandler = async () => {
      
      // Get login button element
      const loginButton = $("#login-button");

      // Create login button spinner element
      const loginSpinner = $("<span>").addClass("spinner-border spinner-border-sm me-2");
      
      // Add spinner to login button
      loginButton.prepend(loginSpinner);

      // Disable login button
      loginButton.attr('disabled', true);

      // Get all inputs elements
      const emailInput = document.getElementsByName('email')[0];
      const passwordInput = document.getElementsByName('password')[0];

      try {

        // Try to login with Firebase
        await signInWithEmailAndPassword(window.firebaseAuth, emailInput.value, passwordInput.value)
        
        // Define URL parameters instance
        const urlParams = new URLSearchParams(window.location.search);
        const redirectUrl = urlParams.get('redirect');

        // Redirect to home page or URL from the parameter
        window.location.replace(redirectUrl ? redirectUrl : "{{ defaults.home_path }}");
      } catch (error) {
        
        // Show alert when error
        swal.fire({ text: error.message, icon: "error" });
      }

      // Remove spinner from login button
      loginButton.find(loginSpinner).remove();

      // Enable login button
      loginButton.attr('disabled', false);
    }

    // Initialize form validation
    $("#login-form").validate({
      rules: {
        email: {
          required: true,
          email: true,
        },
        password: {
          required: true,
          minlength: 6,
        }
      },
      messages: {
        email: {
          required: "Please enter your email",
          email: "Your email is not valid",
        },
        password: {
          required: "Please provide your password",
          minlength: $.validator.format("Please enter at least {0} characters"), // Format validation message
        }
      },
      highlight: (element, errorClass, validClass) => {
        $(element).addClass('is-invalid');
        $(element).removeClass('is-valid');
      },
      unhighlight: (element, errorClass, validClass) => {
        $(element).removeClass('is-invalid');
        $(element).addClass('is-valid');
      },
      errorPlacement: (error, element) => {
        error.addClass('invalid-feedback');
        element.closest('.validation-container').append(error);
      },
      submitHandler: submitHandler,
    });

    // Prevent default form submitted behavior
    $("#login-form").on("submit", (e) => {
      e.preventDefault();
    });
  </script>
{% endblock %}
